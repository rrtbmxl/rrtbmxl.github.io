<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on RPG</title>
    <link>/post/</link>
    <description>Recent content in Posts on RPG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>利用文本分析对比两版本天龙八部</title>
      <link>/2018/11/text-analysis-for-tianlong/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/text-analysis-for-tianlong/</guid>
      <description>今年三月份，为了掌握文本分析技术，特意找了两个版本《天龙八部》的txt文件作为数据而进行练习，但可能被其他事情给耽搁了，当时只完成了一部分。前几天金老去世，令人不胜感概，于是想把这个《天龙八部》的文本分析完成，也算是以自己的方式表达对大师的怀念。
首先还是载入相关的包，这次的包有点多：
library(tidyverse)library(readxl)library(tidytext)library(jiebaR)library(ggthemes)library(widyr)library(igraph)library(ggraph)然后将两个版本的小说文本导入，顺便导入了主要人物的人名，因为这次分析是以分析主要人物为主：
tl_new &amp;lt;- read_lines(&amp;#39;tl_new.txt&amp;#39;)tl_old &amp;lt;- read_lines(&amp;#39;tl_old.txt&amp;#39;)tl_main &amp;lt;- read_lines(&amp;#39;tl_main.txt&amp;#39;) %&amp;gt;% .[-1]因为每个人的称呼不止一个，如乔帮主、萧大王、姊夫等等，都是指萧峰一个人，所以为了统一人名，还要做一些替换工作：
tl_new_tran &amp;lt;- tl_new %&amp;gt;% str_replace_all(&amp;#39;(段公子)|(哥哥)|(誉儿)&amp;#39;, &amp;#39;段誉&amp;#39;) %&amp;gt;%str_replace_all(&amp;#39;(乔峰)|(乔帮主)|(姊夫)|(萧大王)&amp;#39;, &amp;#39;萧峰&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(梦郎)|(小和尚)&amp;#39;, &amp;#39;虚竹&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(南海鳄神)|(岳老二)&amp;#39;, &amp;#39;岳老三&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;带头大哥&amp;#39;, &amp;#39;玄慈&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;延庆太子&amp;#39;, &amp;#39;段延庆&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;白长老&amp;#39;, &amp;#39;白世镜&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;全舵主&amp;#39;, &amp;#39;全冠清&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;甘宝宝&amp;#39;, &amp;#39;钟夫人&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;小康&amp;#39;, &amp;#39;马夫人&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;灵儿&amp;#39;, &amp;#39;钟灵&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(星宿老怪)|(星宿老仙)&amp;#39;, &amp;#39;丁春秋&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;庄聚贤&amp;#39;, &amp;#39;游坦之&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(慕容公子)|(表哥)&amp;#39;, &amp;#39;慕容复&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;国师&amp;#39;, &amp;#39;鸠摩智&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;表妹&amp;#39;, &amp;#39;王语嫣&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(婉妹)|(木姊姊)&amp;#39;, &amp;#39;木婉清&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(郡主)|(小师妹)&amp;#39;, &amp;#39;阿紫&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;段王爷&amp;#39;, &amp;#39;段正淳&amp;#39;)tl_old_tran &amp;lt;- tl_old %&amp;gt;% str_replace_all(&amp;#39;(段公子)|(哥哥)|(誉儿)&amp;#39;, &amp;#39;段誉&amp;#39;) %&amp;gt;%str_replace_all(&amp;#39;(乔峰)|(乔帮主)|(姊夫)|(萧大王)&amp;#39;, &amp;#39;萧峰&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(梦郎)|(小和尚)&amp;#39;, &amp;#39;虚竹&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(南海鳄神)|(岳老二)&amp;#39;, &amp;#39;岳老三&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;带头大哥&amp;#39;, &amp;#39;玄慈&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;延庆太子&amp;#39;, &amp;#39;段延庆&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;白长老&amp;#39;, &amp;#39;白世镜&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;全舵主&amp;#39;, &amp;#39;全冠清&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;甘宝宝&amp;#39;, &amp;#39;钟夫人&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;小康&amp;#39;, &amp;#39;马夫人&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;灵儿&amp;#39;, &amp;#39;钟灵&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(星宿老怪)|(星宿老仙)&amp;#39;, &amp;#39;丁春秋&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;庄聚贤&amp;#39;, &amp;#39;游坦之&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(慕容公子)|(表哥)&amp;#39;, &amp;#39;慕容复&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;国师&amp;#39;, &amp;#39;鸠摩智&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;表妹&amp;#39;, &amp;#39;王语嫣&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(婉妹)|(木姊姊)&amp;#39;, &amp;#39;木婉清&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;(郡主)|(小师妹)&amp;#39;, &amp;#39;阿紫&amp;#39;) %&amp;gt;% str_replace_all(&amp;#39;段王爷&amp;#39;, &amp;#39;段正淳&amp;#39;)上面的替换工作并不全，比如，同样是段郞，有时可能是指段誉，有时可能是指段正淳，这就需要具体的情境，才能判断出来这个词指的是谁，但这个工作太麻烦了，这里就放弃了。</description>
    </item>
    
    <item>
      <title>看图写代码：瑞克与莫蒂剧集评分热力图</title>
      <link>/2018/10/rick-and-morty-heatmap/</link>
      <pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/rick-and-morty-heatmap/</guid>
      <description>大概是去年的这个时间，我在一个名叫Data Is Beautiful的reddit论坛上看到了一张Rick and Morty的分集评分热力图，就想用R把它重复出来。当时水平还不怎么样，只能画个大概出来，很多细节都不知道该如何呈现；前几个月，又重新尝试了下，大部分细节都知道该如何实现了，但还是差一点；这里再尝试一下，看看能不能完全重复出来，毕竟这张图应该就是用R画的。
图是这样的：
首先，还是先把需要用到的包载入：
library(tidyverse)然后载入数据：
rm &amp;lt;- read_csv(&amp;quot;rick &amp;amp; morty.csv&amp;quot;) %&amp;gt;% mutate_at(vars(Episode, Season), as.factor)载入数据的时候，为方便后面的绘图，顺便把集数和季数两个变量改成了因子型。具体的数据是这样的：
rm## # A tibble: 31 x 3## Episode Season Rating## &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;## 1 1 1 8.1## 2 2 1 8.7## 3 3 1 8.4## 4 4 1 8.6## 5 5 1 8.9## 6 6 1 9 ## 7 7 1 8.</description>
    </item>
    
    <item>
      <title>日记文本分析：第一部分</title>
      <link>/2018/10/%E6%97%A5%E8%AE%B0%E6%96%87%E6%9C%AC%E5%88%86%E6%9E%90-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/%E6%97%A5%E8%AE%B0%E6%96%87%E6%9C%AC%E5%88%86%E6%9E%90-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
      <description>据说希腊的德尔菲神庙上刻着几条箴言，其中一条告诫我们要“认识你自己”。这条箴言刻起来容易，做起来却很难，甚至可能是人生最困难的事情之一。要想认识自己，大概有四种方法，一是客观内容的客观描述，如测量人的身高、体重等各种身体特征，这些特征在一定的时间内不会有太大幅度的变化，用来测量这些特征的工具也具有极高的信度和效度，因此不论从要了解的内容和用于了解该内容的方式，都是很客观的；二是客观内容的主观描述，如使用问卷量表测量人的各种能力，人的能力应该也是比较恒定的，但用于测量这些特征的工具，无论是编制过程还是施用过程，都避免不了与人为因素有关的干扰，即便硬要说它是客观的，也是“主观”的客观。三是主观内容的主观描述，如各种投射测验，对于这些测验，我没有实际接触过，但从书本上来看，难免不让我认为这种测验从内容到方式都不是那么客观；最后一种就显而易见了，即对主观内容的客观描述，如对推特的文本分析，我要进行的日记文本分析，也是这一范围之内的。日记本身是主观的产物，但这里我要对这些主观的内容进行客观的数据分析，进而从这一角度来加深对自己的了解，不过这个方法的局限性也很大，毕竟不是每个人都有几十万字的日记文本可以用来分析。另外再加一句，上面这段话，也可以说是对客观内容的主观描述。
这篇文章分为三部分，首先是对我每天记日记的时间进行一个简单的分析，然后对文本进行分词，针对词频进行分析，最后是一个初步的情感分析。下面先载入需要用到的包。
导入需要的包library(tidyverse)library(readxl)library(jiebaR)library(ggthemes)一般情况下，我的第一行代码都是library(tidyverse)，这次主要用到了其中dplyr、tidyr、stringr以及ggplot2四个包；readxl包用来读入.xlsx格式的文件；jiebarR用来分词；ggthemes用来添加我最喜欢的tufte主题。
时间分析首先要把日记中与时间有关的内容提取出来，我记录时间的格式很固定，都是20XX年X月X日 周X XX：XX的形式，通过以下代码，可以把这部分内容提取出来：
time &amp;lt;- read_lines(&amp;#39;dairy.txt&amp;#39;) %&amp;gt;% as.tibble() %&amp;gt;% filter(str_detect(value, &amp;#39;.*年.*月.*日.*周&amp;#39;)) %&amp;gt;% mutate(num = row_number()) %&amp;gt;% select(2, time = 1)处理后是这个样子的：
numtime12012年1月13日 周五 21：4022012年1月14日 周六 21：4132012年1月15日 周日 21：5342012年1月16日 周一 21：5852012年1月17日 周二 21：4562012年1月18日 周三 21：5172012年1月19日 周四 22：0182012年1月20日 周五 21：4392012年1月21日 周六 21：35102012年1月22日 周日 21：53所有的时间都放在一起是没法分析的，接下来我就把各部分时间分离开，并转化成了整数型，这一步代码如下：</description>
    </item>
    
    <item>
      <title>测试文章</title>
      <link>/2018/08/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</guid>
      <description>第一部分第二部分第三部分第四部分第一部分内容 如下：
然而并没有什么内容
第二部分library(ggplot2)ggplot(iris, aes(Sepal.Length, Sepal.Width)) + geom_point()第三部分toc虽然可以生成，但是不能跳转，这是咋回事啊？
第四部分如何指定主页每篇文章显示的文字数量啊？
</description>
    </item>
    
  </channel>
</rss>